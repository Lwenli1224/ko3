#!/usr/bin/env node

const path = require('path')
const fs = require('fs')
const _ = require('lodash')
const chalk = require('chalk')
const program = require('commander')
const Ko = require('../lib/ko')
const parseDir = require('../lib/doc').parseDir
const generateDocAsJson = require('../lib/doc').generateDocAsJson

program
	.usage('<dir>')
	.on('--help', function () {
	  console.log('  Examples:')
	  console.log()
	  console.log(chalk.gray('    # Generate documents'))
	  console.log('    $ ko3 doc dir')
	  console.log()
	})
	.parse(process.argv)

if(program.args.length < 1) {
	return program.help()
}
let dirName = program.args[0]
dirName = dirName.replace(/\/$/, '')
console.log(dirName)
const koConfigFileName = 'ko.config.js'
const koConfigFilePath = path.resolve('.', koConfigFileName)

let options = {}
if(fs.existsSync(koConfigFilePath)) {
	options = require(koConfigFilePath)
}else {
	console.log(chalk.red(`Could not locate ${koConfigFileName}`))
	return
}

new Ko(options)
	.then(ko => {
		parseDir(dirName)
			.then(data => {
				return Promise.resolve({
					indexFilePath: path.join(ko.options.docsDist, 'index.json'),
					filePath: path.join(ko.options.docsDist, dirName.replace(/\//g, '.') + '.json'), 
					data
				})
			})
			.then(generateDocAsJson)
			.catch(err => {
				console.error(err)
				process.exit(1)
			})
	})
